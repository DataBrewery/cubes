Changes in the Cubes
++++++++++++++++++++

Version 0.9
===========

New Features
------------

* slicer_context() - new method that holds all relevant information from 
  configuration. can be reused when creating tools that work in connected
  database environment
* added Hierarchy.all_attributes() and .key_attributes()
* Cell.rollup_dim() - rolls up single dimension to a specified level. this might
  later replace the Cell.rollup() method
* Cell.drilldown() - drills down the cell
* create_workspace() - new top-level method for creating a workspace by name
  of a backend and a configuration dictionary. Easier to create browsers (from
  possible browser pool) programmatically. The browser name might be full
  module name path or relative to the cubes.backends, for example
  `sql.browser` for default SQL denormalized browser.
* get_backend() - get backend by name

* AggregationBrowser.cell_details(): New method returning values of attributes
  representing the cell. Preliminary implementation, return value might
  change.
* AggregationBrowser.cut_details(): New method returning values of attributes
  representing a single cut. Preliminary implementation, return value might
  change.

SQL backend:

* new StarBrowser implemented
* StarBrowser supports snowflakes as well, does not require denormalization
  (no write permission is required)
* ddl_for_model() - get schema DDL as string for model
* join finder and attribute mapper are now just Mapper - class responsible for
  finding appropriate joins and doing logical-to-physical mappings
* coalesce_attribute() - new method for coalescing multiple ways of describing
  a physical attribute (just attribute or table+schema+attribute)
* dimension argument was removed from all methods working with attributes
  (the dimension is now required attribute property)
  
Slicer:

* slicer ddl - generate schema DDL from model
* slicer test - test configuration and model against database and report list 
  of issues, if any
  
* server responds to /details which is a result of
  AggregationBrowser.cell_details()

Examples:

* added simple Flask based web example - dimension aggregation browser

Changes
-------

* **important**: Now all attribute references in the model (dimension
  attributes, measures, ...) are required to be instances of Attribute() and
  the attribute knows it's dimension
* removed `hierarchy` argument from `Dimension.all_attributes()` and `.key_attributes()`
* renamed builder to denormalizer
* in Model: dimension and cube dictionary specification during model
  initialization is depreciated, list should be used (with explicitly
  mentioned attribute "name")
* Dimension.default_hierarchy is now depreciated in favor of
  Dimension.hierarchy() which now accepts no arguments or argument None -
  returning default hierarchy in those two cases
* metadata are now reused for each browser within one workspace - speed
  improvement.

Fixes
-----

* Slicer version should be same version as Cubes: Original intention was to
  have separate server, therefore it had its own versioning. Now there is no
  reason for separate version, moreover it can introduce confusion.
* Proper use of database schema in the Mapper

Version 0.8
===========

New Features
------------

* Started writing StarBrowser - another SQL aggregation browser with different 
  approach (see code/docs)

Slicer Server:

* added configuration option `modules` under `[server]` to load additional 
  modules
* added ability to specify backend module
* backend configuration is in [backend] by default, for SQL it stays in [db]
* added server config option for default `prettyprint` value (useful for 
  demontration purposes)

Documentation:

* Changed license to MIT + small addition. Please refer to the LICENSE file.
* Updated documentation - added missing parts, made reference more readable, 
  moved class and function reference docs from descriptive part to reference 
  (API) part.
* added backend documentation 
* Added "Hello World!" example

Changed Features
----------------

* removed default SQL backend from the server
* moved worskpace creation into the backend module

Fixes
-----

* Fixed create_view to handle not materialized properly (thanks to deytao)
* Slicer tool header now contains #!/usr/bin/env python

Version 0.7.1
=============

Added tutorials in tutorials/ with models in tutorials/models/ and data in tutorials/data/:

* Tutorial 1: 
    * how to build a model programatically
    * how to create a model with flat dimensions
    * how to aggregate whole cube
    * how to drill-down and aggregate through a dimension
* Tutorial 2: 
    * how to create and use a model file
    * mappings
* Tutorial 3: 
    * how hierarhies work
    * drill-down through a hierarchy
* Tutorial 4 (not blogged about it yet):
    * how to launch slicer server
    
New Features
------------

* New method: Dimension.attribute_reference: returns full reference to an attribute
* str(cut) will now return constructed string representation of a cut as it can be used by Slicer

Slicer server:

* added /locales to slicer
* added locales key in /model request
* added Access-Control-Allow-Origin for JS/jQuery

Changes
-------

* Allow dimensions in cube to be a list, not only a dictionary (internally it is ordered dictionary)
* Allow cubes in model to be a list, not only a dictionary (internally it is ordered dictionary)

Slicer server:

* slicer does not require default cube to be specified: if no cube is in the request then try default from
  config or get first from model

Fixes
-----

* Slicer not serves right localization regardless of what localization was used first after server was
  launched (changed model localization copy to be deepcopy (as it should be))
* Fixes some remnants that used old Cell.foo based browsing to Browser.foo(cell, ...) only browsing 
* fixed model localization issues; once localized, original locale was not available
* Do not try to add locale if not specified. Fixes #11: https://github.com/Stiivi/cubes/issues/11

Version 0.7
===========

WARNING: Minor backward API incompatibility - Cuboid renamed to Cell. 

Changes
-------
* Class 'Cuboid' was renamed to more correct 'Cell'. 'Cuboid' is a part of cube with subset of
  dimensions.
* all APIs with 'cuboid' in their name/arguments were renamed to use 'cell' instead
* Changed initialization of model classes: Model, Cube, Dimension, Hierarchy, Level to be more "pythony":
  instead of using initialization dictionary, each attribute is listed as parameter, rest is handled from
  variable list of key word arguments
* Improved handling of flat and detail-less dimensions (dimensions represented just by one attribute which
  is also a key)

Model Initialization Defaults:

* If no levels are specified during initialization, then dimension name is considered flat, with single
attribute.
* If no hierarchy is specified and levels are specified, then default hierarchy will be created from order
of levels
* If no levels are specified, then one level is created, with name `default` and dimension will be
considered flat

Note: This initialization defaults might be moved into a separate utility function/class that will populate
incomplete model


New features
------------

Slicer server:
* changed to handle multiple cubes within model: you have to specify a cube for /aggregate, /facts,... in form: /cube/<cube_name>/<browser_action>
* reflect change in configuration: removed ``view``, added ``view_prefix`` and ``view_suffix``, the cube view name will be constructed by concatenating `view prefix` + `cube name` + `view suffix`
* in aggregate drill-down: explicit dimension can be specified with drilldown=dimension:level, such as:
  date:month

This change is considered final and therefore we can mark it is as API version 1.

Version 0.6
===========

New features
------------

Cubes:

* added 'details' to cube - attributes that might contain fact details which are not relevant to
  aggregation, but might be interesting when displaying facts
* added ordering of facts in aggregation browser
* SQL denormalizer can now add indexes to key columns, if requested
* one detail table can be used more than once in SQL denomralizer (such as an organisation for both -
  receiver and donor), added key ``alias`` to ``joins`` in model description

Slicer server:

* added ``log`` a and ``log_level`` configuration options (under ``[server]``)
* added ``format=`` parameter to ``/facts``, accepts ``json`` and ``csv``
* added ``fields=`` parameter to ``/facts`` - comma separated list of returned fields in CSV
* share single sqlalchemy engine within server thread
* limit number of facts returned in JSON (configurable by ``json_record_limit`` in ``[server]`` section)

Experimental:
(might change or be removed, use with caution)

* added cubes searching frontend for separate cubes_search experimenal Sphinx backend (see
  https://bitbucket.org/Stiivi/cubes-search)

Fixes
-----

* fixed localization bug in fact(s) - now uses proper attribute name without locale suffix
* fixed passing of pagination and ordering parameters from server to aggregation browser when
  requesting facts
* fixed bug when using multiple conditions in SQL aggregator
* make host/port optional separately
